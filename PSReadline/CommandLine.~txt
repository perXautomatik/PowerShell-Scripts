CommandLine
-----------
(Get-PSReadlineOption).HistorySavePath
Get-PSReadLineKeyHandler
Get-PSReadLineOption
New-Item -Path "C:\Users\crbk01\OneDrive - Region Gotland\WindowsPowerShell\PSReadline" -ItemType SymbolicLink -Value "C:\Users\crbk01\AppData\Roaming\Mic...
New-Item -Path "C:\Users\crbk01\OneDrive - Region Gotland\WindowsPowerShell\PSReadline" -ItemType Hardlink -Value "C:\Users\crbk01\AppData\Roaming\Microso...
New-Item -Path "C:\Users\crbk01\OneDrive - Region Gotland\WindowsPowerShell\PSReadline" -ItemType Junction -Value "C:\Users\crbk01\AppData\Roaming\Microso...
(Get-PSReadlineOption).HistorySavePath
set-PSReadlineOption -HistorySavePath "C:\Users\crbk01\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt"
Set-PSReadLineOption -HistorySavePath C:\Users\crbk01\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt -HistorySaveStyle in...
Set-PSReadLineOption -HistorySavePath C:\Users\crbk01\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt -HistorySaveStyle sa...
(Get-PSReadlineOption).HistorySavePath
Get-PSReadLineOption
 [Microsoft.PowerShell.PSConsoleReadLine]::GetBufferState
cd "C:\Program Files\TortoiseGit\bin"
ls
.\TortoiseGitProc.exe
cd "C:\Users\crbk01\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\"
".\C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe"
"C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe"
.\"C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe"
.\C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe
'.\C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe'
.\'C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe'
&"C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe"
&"C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe" /command:repostatus
&"C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe" /command:repostatus /path:"C:\Users\crbk01\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine"
&"C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe" /command:repostatus /path:"C:\Users\crbk01\OneDrive - Region Gotland\WindowsPowerShell"
cd "C:\Users\crbk01\OneDrive - Region Gotland\WindowsPowerShell"
&"C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe"
&"C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe" /path
&"C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe -command repostatus -path C:\Users\crbk01\OneDrive - Region Gotland\WindowsPowerShell"
Import-Module ecoargs
Import-Module echoargs
Import-Module pscx
Install-Module -Name Pscx
echoargs &"C:\Program Files\TortoiseGit\bin\TortoiseGitProc.exe -command repostatus -path C:\Users\crbk01\OneDrive - Region Gotland\WindowsPowerShell"
echoargs
Import-Module pscx
Import-Module -name pscx
$history = [System.Collections.ArrayList]([System.IO.File]::ReadAllLines((Get-PSReadlineOption).HistorySavePath))...
get-history
get-history -Verbose
get-history | select -commandline
get-history | select commandline

	cd C:\9dfe73ef\settingsRepository\repository
echo "git Subtree then remove"; $x = 'data' ; git subtree add --prefix=$x split $x ; git rm -rf $x ; git add -A ; git commit -am "removing $x folder"
echo "git Subtree then remove"; $x = 'repository' ; git subtree add --prefix=$x split $x ; git rm -rf $x ; git add -A ; git commit -am "removing $x folder"
git submodules
git submodule
git submodule db
git submodule db status
git submodule status db
git submodule status /db
git submodule status \db
cd db
git remote
(Split-Path -Parent $MyInvocation.MyCommand.Path)
$MyInvocation.MyCommand.Path
$env:path
Get-Command -CommandType externalscript
$env:path +=’;C:\install\'
echo 'Added scripts'; Get-Command -CommandType externalscript
echo "add to envPath" ; $x='C:\install\Scripts\'; $env:path +=’;$x'
echo 'Added scripts'; Get-Command -CommandType externalscript
$env:path
echo "add to envPath" ; $x='C:\install\Scripts\'; $env:path +=’;'+$x
$env:path
echo 'Added scripts'; Get-Command -CommandType externalscript
echo "make link" ; $x = 'C:\Users\crbk01\Documents' ; $y = 'D:\Documents\WindowsPowerShell' ; new-item -itemType SymbolicLink -path $y -target $x
echo "make link" ; $x = 'C:\Users\crbk01\Documents' ; $y = 'D:\Documents\WindowsPowerShell' ; new-item -itemTypeSymbolicLink -path $y -target $x
echo "make link" ; $x = 'C:\Users\crbk01\Documents' ; $y = 'D:\Documents\WindowsPowerShell' ; new-item -ItemType SymbolicLink -Path $y -target $x
echo "make link" ; $x = 'C:\Users\crbk01\Documents' ; $y = 'D:\Documents\WindowsPowerShell' ; new-item -ItemType SymbolicLink -Path "$y" -target "$x"
new-item -ItemType SymbolicLink -Path "D:\Documents\WindowsPowerShell" -target "C:\Users\crbk01\Documents"
echo 'userProfilePath'; $env:USERPROFILE
echo 'userProfilePath'; $env:USERPROFILE ; $PROFILE | Get-Member -Type NoteProperty
echo "git root path"; git rev-parse --show-toplevel
#echo "git SubmoduleAs branch"; $x = 'https://github.com/perXautomatik/sql-getIndexes.git' ;git submodule add -b $x
git submodule add -b
#echo "absorbGitDir" ;git submodule absorbgitdirs
cd ..
cd..
echo "absorbGitDir" ;git submodule absorbgitdirs scratches
echo "absorbGitDir" ;git submodule absorbgitdirs codestyles
cd projects
cd ..
echo "absorbGitDir" ;git submodule absorbgitdirs .\settingsRepository\
echo "absorbGitDir" ;git submodule absorbgitdirs .\settingsRepository\.git
echo "absorbGitDir" ;git submodule absorbgitdirs settingsRepository\.git
echo "absorbGitDir" ;git submodule absorbgitdirs \settingsRepository\
echo "absorbGitDir" ;git submodule absorbgitdirs /settingsRepository/
echo "absorbGitDir" ;git submodule absorbgitdirs .\settingsRepository\
echo "absorbGitDir" ;git submodule absorbgitdirs settingsRepository
cd .\settingsRepository\
cd .\repository\
git remote
git remote --list
git remote origin
git remote -v origin
git remote origin -v
git -v remote origin
git remote show origin
echo "Git Show origin"; git remote show origin
cd .. ..
cd ..
git submodule
git submodule -h
git branch
git submodule -b DGSettings -f --name DGSettings -- settingsRepository\repository
git submodule add -b DGSettings -f --name DGSettings -- settingsRepository\repository
git submodule add -b DGSettings -f --name DGSettings -- ./settingsRepository\repository/
#echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name DGSettings -- ./settingsRepository\repository/
#echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name DGSettings --reference 'https://github.com/perXautomatik/DatagripSettings.git' --path ./settingsRepository\repository/
echo "absorbGitDir" ;git submodule absorbgitdirs settingsRepository
echo "absorbGitDir" ;git submodule absorbgitdirs settingsRepository/repository
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name 'settingsRepository/repository' --reference 'https://github.com/perXautomatik/DatagripSettings.git' --path ./settingsRepository/\repository/
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name 'settingsRepository/repository' --reference 'https://github.com/perXautomatik/DatagripSettings.git' -- ./settingsRepository/\repository/
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name 'settingsRepository/repository' --reference 'https://github.com/perXautomatik/DatagripSettings.git' -- ./settingsRepository/repository/
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name 'settingsRepository/repository' --reference 'https://github.com/perXautomatik/DatagripSettings.git' -- ./\settingsRepository\repository/
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name 'settingsRepository/repository' --reference 'https://github.com/perXautomatik/DatagripSettings.git' -- 'D:\Users\Crbk01\AppData\Roaming\JetBrains\DataGrip2021.1\settingsRepository\repository\'
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name 'settingsRepository/repository' -- 'https://github.com/perXautomatik/DatagripSettings.git' 'D:\Users\Crbk01\AppData\Roaming\JetBrains\DataGrip2021.1\settingsRepository\repository\'
echo "absorbGitDir" ;git submodule absorbgitdirs settingsRepository
echo "absorbGitDir" ;git submodule absorbgitdirs
submodules
git submodules
git submodule
git rm --cached 'consoles/db/23be5c42-e61f-4ffe-a60b-4830fba04d23'
git submodule
git rm --cached 'consoles/db/39d10903-916f-4add-94c3-4526180c3416'
git submodule
git rm --cached 'consoles/db/39d10903-916f-4add-94c3-4526180c3416/../../.git/modules/db/modules/39d10903-916f-4add-94c3-4526180c3416'
git rm --cached 'consoles/db/'
git rm -r --cached 'consoles/db/'
git rm -f-r --cached 'consoles/db/'
git rm -fr --cached 'consoles/db/'
git submodule
git rm -fr --cached 'projects'
git submodule
echo "git remove every memmory"; git rm -fr --cached 'scratches'
git submodule
echo "git remove every memmory"; git rm -fr --cached 'settingsRepository'
git submodule
git submodule -a
git submodule status
echo "absorbGitDir" ;git submodule absorbgitdirs
git submodule
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name 'settingsRepository/repository' -- 'https://github.com/perXautomatik/DatagripSettings.git' 'D:\Users\Crbk01\AppData\Roaming\JetBrains\DataGrip2021.1\settingsRepository\repository\'
git submodule
echo "git remove every memmory"; git rm -fr --cached 'settingsRepository'
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name 'settingsRepository/repository' -- 'https://github.com/perXautomatik/DatagripSettings.git' ./settingsRepository\repository\/
git submodule
echo "git remove every memmory"; git rm -fr --cached 'settingsRepository'
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name 'settingsRepository/repository' -- 'https://github.com/perXautomatik/DatagripSettings.git' settingsRepository\repository
git submodule
echo "git Config Submodule summary" ; git config --global status.submoduleSummary true
cd .\settingsRepository\
echo "git remove every memmory"; git rm -fr --cached 'settingsRepository'
cd ..
echo "git remove every memmory"; git rm -fr --cached 'settingsRepository'
cd .\settingsRepository\
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b DGSettings -f --name 'repository' -- 'https://github.com/perXautomatik/DatagripSettings.git' repository
git submodule
cd ..
git branch
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b WorkScratch -f --name 'Scraches' -- 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' Scratches
git submodule
echo "git remove every memmory"; git rm -fr --cached 'scratches'
git submodule
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b WorkScratch -f --name 'Scraches' -- 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' scratches
git submodule
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b ProjectsNConsoles -f --name 'consoles' -- 'https://github.com/perXautomatik/DatagripProjectsNConsoles.git' consoles
echo "git remove every memmory"; git rm -fr --cached 'consoles'
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b ProjectsNConsoles -f --name 'consoles' -- 'https://github.com/perXautomatik/DatagripProjectsNConsoles.git' consoles
git submodule
echo "absorbGitDir" ;git submodule absorbgitdirs
cd consoles
echo "absorbGitDir" ;git submodule absorbgitdirs
git submodule
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b db -f --name 'db' -- 'https://github.com/perXautomatik/VisionH-ndelserToEasyRead.git' db
cd db
git submodule
echo "absorbGitDir" ;git submodule absorbgitdirs
echo "git remove every memmory"; git rm -fr --cached '1781354c-8195-4b53-903a-bbf9b4558cb0'
echo "absorbGitDir" ;git submodule absorbgitdirs
echo "git remove every memmory"; git rm -fr --cached 6163ad17-589f-4530-969d-00e2cf1af340
echo "absorbGitDir" ;git submodule absorbgitdirs
echo "git remove every memmory"; git rm -fr --cached 947f2b47-af0c-4354-9696-9462b1a4bf8b
echo "absorbGitDir" ;git submodule absorbgitdirs
echo "git remove every memmory"; git rm -fr --cached a922a8bc-6602-44d4-8ab2-a4062fc64d99
echo "absorbGitDir" ;git submodule absorbgitdirs
git submodule
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b 947f2b47-af0c-4354-9696-9462b1a4bf8b -f --name '947f2b47-af0c-4354-9696-9462b1a4bf8b' -- 'https://github.com/perXautomatik/DatagripProjectsNConsoles.git' 947f2b47-af0c-4354-9696-9462b1a4bf8b
echo "git remove every memmory"; git rm -fr --cached 49f168c8-015c-43d2-b9f4-06de275bdc15
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b 947f2b47-af0c-4354-9696-9462b1a4bf8b -f --name '947f2b47-af0c-4354-9696-9462b1a4bf8b' -- 'https://github.com/perXautomatik/DatagripProjectsNConsoles.git' 947f2b47-af0c-4354-9696-9462b1a4bf8b
echo "git remove every memmory"; git rm -fr --cached .\947f2b47-af0c-4354-9696-9462b1a4bf8b\
echo "git remove every memmory"; git rm -fr --cached 947f2b47-af0c-4354-9696-9462b1a4bf8b
echo "git remove every memmory"; git rm -fr --cached '947f2b47-af0c-4354-9696-9462b1a4bf8b'
echo "Git Ad exsiting path as submodule and branch" ; git submodule add -b 947f2b47-af0c-4354-9696-9462b1a4bf8b -f --name '947f2b47-af0c-4354-9696-9462b1a4bf8b' -- 'https://github.com/perXautomatik/DatagripProjectsNConsoles.git' 947f2b47-af0c-4354-9696-9462b1a4bf8b
echo "git remove every memmory"; git rm -fr --cached '6163ad17-589f-4530-969d-00e2cf1af340'
echo "git remove every memmory"; git rm -fr --cached 'a922a8bc-6602-44d4-8ab2-a4062fc64d99'
echo "git remove every memmory"; git rm -fr --cached '1781354c-8195-4b53-903a-bbf9b4558cb0'
echo "git remove every memmory"; git rm -fr --cached '6163ad17-589f-4530-969d-00e2cf1af340'
git submodule
echo "Git Ad exsiting path as submodule and branch" ; $x = 'a922a8bc-6602-44d4-8ab2-a4062fc64d99' $y = 'https://github.com/perXautomatik/VisionH-ndelserToEasyRead.git' ; git submodule add -b $x -f --name '$x' -- $y '$x'
echo "Git Ad exsiting path as submodule and branch" ; $x = 'a922a8bc-6602-44d4-8ab2-a4062fc64d99' ; $y = 'https://github.com/perXautomatik/VisionH-ndelserToEasyRead.git' ; git submodule add -b $x -f --name '$x' -- $y '$x'
echo "Git Ad exsiting path as submodule and branch" ; $x = 'a922a8bc-6602-44d4-8ab2-a4062fc64d99' ; $y = 'https://github.com/perXautomatik/VisionH-ndelserToEasyRead.git' ; git submodule add -b $x -f --name $x -- $y $x
echo "git remove every memmory"; $x = 'a922a8bc-6602-44d4-8ab2-a4062fc64d99' ; git rm -fr --cached $x
echo "Git Ad exsiting path as submodule and branch" ; $x = 'a922a8bc-6602-44d4-8ab2-a4062fc64d99' ; $y = 'https://github.com/perXautomatik/VisionH-ndelserToEasyRead.git' ; git submodule add -b $x -f --name $x -- $y $x
echo "git remove every memmory"; $x = 'a922a8bc-6602-44d4-8ab2-a4062fc64d99' ; git rm -fr --cached $x
echo "Git Ad exsiting path as submodule and branch" ; $x = 'a922a8bc-6602-44d4-8ab2-a4062fc64d99' ; $y = 'https://github.com/perXautomatik/VisionH-ndelserToEasyRead.git' ; git submodule add -b $x -f --name $x -- $y $x
echo "git remove every memmory"; $x = 'a922a8bc-6602-44d4-8ab2-a4062fc64d99' ; git rm -fr --cached $x
echo "absorbGitDir" ;git submodule absorbgitdirs
echo "Git Ad exsiting path as submodule and branch" ; $x = '1781354c-8195-4b53-903a-bbf9b4558cb0' ; $y = 'https://github.com/perXautomatik/VisionH-ndelserToEasyRead.git' ; git submodule add -b $x -f --name $x -- $y $x
echo "git remove every memmory"; $x = '1781354c-8195-4b53-903a-bbf9b4558cb0' ; git rm -fr --cached $x
echo "Git Ad exsiting path as submodule and branch" ; $x = '1781354c-8195-4b53-903a-bbf9b4558cb0' ; $y = 'https://github.com/perXautomatik/VisionH-ndelserToEasyRead.git' ; git submodule add -b $x -f --name $x -- $y $x
echo "absorbGitDir" ;git submodule absorbgitdirs
git submodule
echo "Git Ad exsiting path as submodule and branch" ; $x = '6163ad17-589f-4530-969d-00e2cf1af340' ; $y = 'https://github.com/perXautomatik/VisionH-ndelserToEasyRead.git' ; git submodule add -b $x -f --name $x -- $y $x
echo "absorbGitDir" ;git submodule absorbgitdirs
cd ..
git submodule
echo "absorbGitDir" ;git submodule absorbgitdirs
cd ..
echo "absorbGitDir" ;git submodule absorbgitdirs
cd .\projects\
git submodule
cd ..
git branches
git branch
echo "Git Ad exsiting path as submodule and branch" ; $x = 'projects' ; $y = 'https://github.com/perXautomatik/sql-Blad1ObjektVsRegisterObjekt.git' ; git submodule add -b WorkProjeckts -f --name $x -- $y $x
echo "git remove every memmory"; $x = 'projects' ; git rm -fr --cached $x
echo "Git Ad exsiting path as submodule and branch" ; $x = 'projects' ; $y = 'https://github.com/perXautomatik/sql-Blad1ObjektVsRegisterObjekt.git' ; git submodule add -b WorkProjeckts -f --name $x -- $y $x
git submodule
echo "Git Ad exsiting path as submodule and branch" ; $x = 'projects' ; $y = 'https://github.com/perXautomatik/sql-Blad1ObjektVsRegisterObjekt.git' ; git submodule add -b WorkProjeckts -f --name 'DatagripProjects' -- $y $x
echo "git remove every memmory"; $x = 'projects' ; git rm -fr --cached $x
echo "Git Ad exsiting path as submodule and branch" ; $x = 'projects' ; $y = 'https://github.com/perXautomatik/sql-Blad1ObjektVsRegisterObjekt.git' ; git submodule add -b WorkProjeckts -f --name 'DatagripProjects' -- $y $x
git ls-files --functions
git ls-files --functions -c
git ls-files -c projects
git ls-files -cz projects
git ls-files projects
git ls-files -u projects
git ls-files --debug projects
git ls-files --with-tree projects
git ls-files --resolve-undo projects
git ls-files --killed projects
git ls-files --staged projects
git ls-files --stage projects
git ls-files -o projects
git ls-files -ot projects
git rm "projects/.idea - genv\303\244g.lnk"
git rm 'projects/.idea - genv\303\244g.lnk'
git rm 'projects\.idea - genv\303\244g.lnk'
git rm -rf 'projects\.idea - genv\303\244g.lnk'
git rm -rf 'projects\.idea - genväg.lnk'
git ls-files -ot projects
git rm "projects/.idea - genväg.lnk"
git rm -rf "projects/.idea - genväg.lnk"
git rm --function
echo "git remove every memmory"; $x = 'projects' ; git rm -fr --cached $x
cd .\projects\
git submodule
git rm -rf --cached ".idea - genväg.lnk"
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'projects' ; $y = 'https://github.com/perXautomatik/sql-Blad1ObjektVsRegisterObjekt.git' ; git submodule add -b WorkProjeckts -f --name 'DatagripProjects' -- $y $x ; git commit -m $l+$x
cd ..
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'projects' ; $y = 'https://github.com/perXautomatik/sql-Blad1ObjektVsRegisterObjekt.git' ; git submodule add -b WorkProjeckts -f --name 'DatagripProjects' -- $y $x ; git commit -m $l+$x
$l = "git remove every memmory"; echo $l ; $x = 'scratches' ; git rm -fr --cached $x ; git commit -m $l $x
$l = "git remove every memmory"; echo $l ; $x = 'scratches' ; git rm -fr --cached $x ; git commit -m $l+$x
$l = "git remove every memmory"; echo $l ; $x = 'projects' ; git rm -fr --cached $x ; git commit -m $l+$x
$l = "git remove every memmory"; echo $l ; $x = 'settingsRepository' ; git rm -fr --cached $x ; git commit -m $l+$x
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'projects' ; $y = 'https://github.com/perXautomatik/sql-Blad1ObjektVsRegisterObjekt.git' ; git submodule add -b WorkProjeckts -f --name 'DatagripProjects' -- $y $x ; git commit -m $l+$x
git submodule
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'scratches' ; $y = 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' ; git submodule add -b WorkScratches -f --name 'scratches' -- $y $x ; git commit -m $l+$x
$l = "git remove every memmory"; echo $l ; $x = 'scratches' ; git rm -fr --cached $x ; git commit -m $l+$x
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'scratches' ; $y = 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' ; git submodule add -b WorkScratches -f --name 'scratches' -- $y $x ; git commit -am $l+$x
$l = "git remove every memmory"; echo $l ; $x = 'scratches' ; git rm -fr --cached $x ; git commit -am $l+$x
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'scratches' ; $y = 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' ; git submodule add -b WorkScratches -f --name 'scratches' -- $y $x ; git commit -am $l+$x
cd scratches
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'scratches' ; $y = 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' ; git submodule add -b WorkScratches -f --name 'scratches' -- $y $x ; git commit -am $l+$x
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'scratches' ; $y = 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' ; git submodule add -fb WorkScratches --name 'scratches' -- $y $x ; git commit -am $l+$x
cd ..
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'scratches' ; $y = 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' ; git submodule add -fb WorkScratches --name 'scratches' -- $y $x ; git commit -am $l+$x
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'scratches' ; $y = 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' ; git submodule add -b WorkScratches --name 'scratches' -- $y $x ; git commit -am $l+$x
git submodule
echo "absorbGitDir" ;git submodule absorbgitdirs
git submodule --function
git submodule init -- scratches
git submodule deinit --all
cd consoles
git commit -am 'x'
cd ..
git submodule deinit --all
git submodule deinit --all --chached
git submodule deinit --all --cached
git submodule deinit --cached
git submodule deinit -f
git submodule deinit --all -f
git commit -am 'x'
git submodule
echo "absorbGitDir" ;git submodule absorbgitdirs
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'scratches' ; $y = 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' ; git submodule add -b WorkScratches --name 'scratches' -- $y $x ; git commit -am $l+$x
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'scratches' ; $y = 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' ; git submodule add -b WorkScratches --force --name 'scratches' -- $y $x ; git commit -am $l+$x
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'scratches' ; $y = 'https://github.com/perXautomatik/Sql-Datagrip-Scratches.git' ; git submodule add --force --name 'scratches' -- $y $x ; git commit -am $l+$x
$l = "Git Ad exsiting path as submodule and branch" ; echo $l ; $x = 'projects' ; $y = 'https://github.com/perXautomatik/sql-Blad1ObjektVsRegisterObjekt.git' ; git submodule add -f --name 'DatagripProjects' -- $y $x ; git commit -m $l+$x


